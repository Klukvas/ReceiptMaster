name: "CI: Test, Build, and Deploy"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: |
            backend/yarn.lock
            yarn.lock

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run linting
        run: yarn lint

      - name: Run tests
        run: yarn test

      - name: Run E2E tests
        run: yarn test:e2e

      - name: Build application
        run: yarn build

  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: |
            frontend/yarn.lock
            yarn.lock

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run linting
        run: yarn lint

      - name: Build application
        run: yarn build

  docker-build-test:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Frontend image (test)
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: false
          tags: marketflow-frontend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Backend image (test)
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: false
          tags: marketflow-backend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate test summary
        run: |
          echo "## ✅ Tests and Build Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🧪 Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Backend Tests:** ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- **Frontend Build:** ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- **Docker Build:** ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Built Images" >> $GITHUB_STEP_SUMMARY
          echo "- \`marketflow-frontend:test\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`marketflow-backend:test\`" >> $GITHUB_STEP_SUMMARY

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [docker-build-test]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set repository name to lowercase
        run: |
          echo "REPO_NAME_LOWER=$(echo '${{ github.event.repository.name }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "REPO_OWNER_LOWER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "IMAGE_NAME_LOWER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')/$(echo '${{ github.event.repository.name }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}/frontend
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}/backend
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}/frontend:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}/frontend:latest
          labels: |
            org.opencontainers.image.title=MarketFlow Frontend
            org.opencontainers.image.description=React frontend for MarketFlow trading service
            org.opencontainers.image.version=${{ github.sha }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          no-cache: true

      - name: Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}/backend:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}/backend:latest
          labels: |
            org.opencontainers.image.title=MarketFlow Backend
            org.opencontainers.image.description=NestJS backend for MarketFlow trading service
            org.opencontainers.image.version=${{ github.sha }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          no-cache: true

      - name: Generate deployment summary
        run: |
          echo "## 🐳 Docker Images Built and Pushed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.ref }}" == "refs/heads/main" && "${{ github.event_name }}" == "push" ]]; then
            echo "### 🚀 Production Deployment Complete" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| Service | Image | Status |" >> $GITHUB_STEP_SUMMARY
            echo "|---------|-------|--------|" >> $GITHUB_STEP_SUMMARY
            echo "| Frontend | \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}/frontend:latest\` | ✅ Deployed |" >> $GITHUB_STEP_SUMMARY
            echo "| Backend | \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}/backend:latest\` | ✅ Deployed |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 🔗 Registry Links" >> $GITHUB_STEP_SUMMARY
            echo "- [Frontend Package](https://${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}/frontend)" >> $GITHUB_STEP_SUMMARY
            echo "- [Backend Package](https://${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}/backend)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 📋 Next Steps" >> $GITHUB_STEP_SUMMARY
            echo "1. Update your production environment to use the new images" >> $GITHUB_STEP_SUMMARY
            echo "2. Monitor the deployment for any issues" >> $GITHUB_STEP_SUMMARY
            echo "3. Update your docker-compose.yml with the new image tags if needed" >> $GITHUB_STEP_SUMMARY
          else
            echo "### 📦 Built Images" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| Service | Image | Context |" >> $GITHUB_STEP_SUMMARY
            echo "|---------|-------|---------|" >> $GITHUB_STEP_SUMMARY
            echo "| Frontend | \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}/frontend:${{ github.sha }}\` | \`./frontend\` |" >> $GITHUB_STEP_SUMMARY
            echo "| Backend | \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}/backend:${{ github.sha }}\` | \`./backend\` |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Usage" >> $GITHUB_STEP_SUMMARY
            echo "You can now pull these images using:" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
            echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}/frontend:${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
            echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}/backend:${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi

